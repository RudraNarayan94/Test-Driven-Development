Creating test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Found 26 test(s).
Operations to perform:
  Synchronize unmigrated apps: corsheaders, django_filters, messages, rest_framework, rest_framework_simplejwt, staticfiles
  Apply all migrations: admin, auth, contenttypes, sessions, sweets_app
Synchronizing apps without migrations:
  Creating tables...
    Running deferred SQL...
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0001_initial... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying auth.0009_alter_user_last_name_max_length... OK
  Applying auth.0010_alter_group_name_max_length... OK
  Applying auth.0011_update_proxy_permissions... OK
  Applying auth.0012_alter_user_first_name_max_length... OK
  Applying sweets_app.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying sessions.0001_initial... OK
  Applying sweets_app.0002_sweet...test_login_fails_with_invalid_password (sweets_app.tests.test_auth.UserLoginTestCase.test_login_fails_with_invalid_password)
Test Case 2 (Failure): Login fails with an invalid password. ... ok
test_login_fails_with_missing_data (sweets_app.tests.test_auth.UserLoginTestCase.test_login_fails_with_missing_data)
Test Case 4 (Failure): Login fails with missing fields. ... ok
test_login_fails_with_non_existent_user (sweets_app.tests.test_auth.UserLoginTestCase.test_login_fails_with_non_existent_user)
Test Case 3 (Failure): Login fails with a non-existent username. ... ok
test_user_can_login_successfully (sweets_app.tests.test_auth.UserLoginTestCase.test_user_can_login_successfully)
Test Case 1 (Success): User can log in with valid credentials. ... ok
test_registration_fails_with_existing_username (sweets_app.tests.test_auth.UserRegistrationTestCase.test_registration_fails_with_existing_username)
Test Case 5 (Failure): Registration fails when username already exists ... ok
test_registration_fails_with_invalid_data (sweets_app.tests.test_auth.UserRegistrationTestCase.test_registration_fails_with_invalid_data)
Test Case 2 (Failure): Registration fails with invalid data ... ok
test_registration_fails_with_missing_data (sweets_app.tests.test_auth.UserRegistrationTestCase.test_registration_fails_with_missing_data)
Test Case 3 (Failure): Registration fails with missing required fields ... ok
test_registration_fails_with_unmatched_passwords (sweets_app.tests.test_auth.UserRegistrationTestCase.test_registration_fails_with_unmatched_passwords)
Test Case 4 (Failure): Registration fails when passwords do not match. ... ok
test_user_can_register_successfully (sweets_app.tests.test_auth.UserRegistrationTestCase.test_user_can_register_successfully)
Test Case 1 (Success): User can register with valid data ... ok
test_admin_can_restock_sweet (sweets_app.tests.test_inventory.InventoryAPITestCase.test_admin_can_restock_sweet)
Test an admin user can restock a sweet. ... ok
test_non_admin_cannot_restock_sweet (sweets_app.tests.test_inventory.InventoryAPITestCase.test_non_admin_cannot_restock_sweet)
Test a regular user is denied from restocking a sweet. ... ok
test_purchase_sweet_successfully (sweets_app.tests.test_inventory.InventoryAPITestCase.test_purchase_sweet_successfully)
Test a user can purchase a sweet, decreasing the quantity. ... ok
test_purchase_sweet_with_zero_quantity_fails (sweets_app.tests.test_inventory.InventoryAPITestCase.test_purchase_sweet_with_zero_quantity_fails)
Test purchasing a sweet with zero quantity fails. ... ok
test_restock_with_invalid_quantity_fails (sweets_app.tests.test_inventory.InventoryAPITestCase.test_restock_with_invalid_quantity_fails)
Test restocking with a non-integer or negative quantity fails. ... ok
test_unauthenticated_user_cannot_purchase_sweet (sweets_app.tests.test_inventory.InventoryAPITestCase.test_unauthenticated_user_cannot_purchase_sweet)
Test unauthenticated user cannot purchase a sweet. ... ok
test_admin_user_can_delete_sweet (sweets_app.tests.test_sweet.SweetAPITestCase.test_admin_user_can_delete_sweet)
Test an admin user can delete a sweet. ... ok
test_authenticated_user_can_create_sweet (sweets_app.tests.test_sweet.SweetAPITestCase.test_authenticated_user_can_create_sweet)
Test authenticated user can create a sweet. ... ok
test_authenticated_user_can_update_sweet (sweets_app.tests.test_sweet.SweetAPITestCase.test_authenticated_user_can_update_sweet)
Test authenticated user can update a sweet. ... ok
test_authenticated_user_can_view_sweet_list (sweets_app.tests.test_sweet.SweetAPITestCase.test_authenticated_user_can_view_sweet_list)
Test authenticated user can view a list of sweets. ... ok
test_regular_user_cannot_delete_sweet (sweets_app.tests.test_sweet.SweetAPITestCase.test_regular_user_cannot_delete_sweet)
Test a regular user is denied from deleting a sweet. ... ok
test_search_for_sweets_by_category (sweets_app.tests.test_sweet.SweetAPITestCase.test_search_for_sweets_by_category)
Test searching for sweets by category. ... ok
test_search_for_sweets_by_name (sweets_app.tests.test_sweet.SweetAPITestCase.test_search_for_sweets_by_name)
Test searching for a sweet by its name. ... ok
test_search_returns_no_results_for_invalid_query (sweets_app.tests.test_sweet.SweetAPITestCase.test_search_returns_no_results_for_invalid_query)
Test that search returns an empty list for a non-existent query. ... ok
test_unauthenticated_user_cannot_create_sweet (sweets_app.tests.test_sweet.SweetAPITestCase.test_unauthenticated_user_cannot_create_sweet)
Test unauthenticated user is denied from creating a sweet. ... ok
test_unauthenticated_user_cannot_update_sweet (sweets_app.tests.test_sweet.SweetAPITestCase.test_unauthenticated_user_cannot_update_sweet)
Test unauthenticated user cannot update a sweet. ... ok
test_unauthenticated_user_cannot_view_sweet_list (sweets_app.tests.test_sweet.SweetAPITestCase.test_unauthenticated_user_cannot_view_sweet_list)
Test unauthenticated user is denied from viewing the sweet list. ... ok

----------------------------------------------------------------------
Ran 26 tests in 44.293s

OK
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
 OK
System check identified no issues (0 silenced).
